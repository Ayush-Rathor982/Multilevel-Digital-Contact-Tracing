Title: Multilevel Digital Contact Tracing, G. Mahapatra, P. Pradhan, A. Khan, S. K. Setua, R. K. Pal, A. Rathor, R. Chattaraj, S. Banerjee.


The code segment has two parts: 
A. Contact tracing with toy data sets as in the manuscript (TestingCode)
B. Contact tracing with large synthetic data sets (LargeScale)

========================================================================================
========================================================================================


Part A (TestingCode):  For testing the toy model
----------------------------------------------------------------------

Code files:
toy_model_contact_trace.cpp
infection_pathways_tree.ipynb (visualization in python)

Notations:-
N - 6 or 10  
L - 3 (default), number of levels tracing
q - 5 (default), the average degree of the contact graph  
D - 5 days (default) incubation period 
I - 1 or 2 sets of infected persons selected from the population

The 'Input' folder contains two subfolders:

1. TestCase1:  testing toy model 1
2. TestCase2:  testing toy model 2

Both these subfolders contain another two subfolders :

1. GeneratedData: contains the files like 'day6.txt', which stores the contacts between persons
2. Infected_List : contains the files like 'day6.txt' which stores the infected persons list   


Commands to execute the program:-
command to compile the programme  =>  g++ toy_model_contact_trace.cpp -o toy_model_contact_trace
command to run the program =>  ./toy_model_contact_trace 

During the execution, it asks for choosing a test case:

===================================
Which Test Case you want to run
1 => Test Case 1
2 => Test Case 2

Enter your choice: 
====================================


After entering the choice, it will run the corresponding test case and store output in the 'Output' folder.


The 'Output' folder contains two subfolders and one file: 

file:-
1. Contact_Graph_info.txt: It stores the contact history of every person, how each person contacts other persons

subfolders:-
1. Infected_path_list : contains the files like 'day6.txt' which stores the contacts(directly or indirectly) between infected person with other persons
2. Level_traverse: contains files like 'day6.txt', which stores the level-wise trace list of persons who have a chances of being infected

------------------------------------------------------------END------------------------------------------------------


Part B (LargeScale): For testing with large synthetic data sets
--------------------------------------------------------------------------------------------------------------------------------------------

code files:-
dataGenerate.h
GenerateInfectedList.h
contact_trace.cpp
infection_pathways_tree.ipynb (visualization in python) 

Notations:-
N - Population size (Input from the keyboard)
f - 0.01 (default), factor 
L - 3 (default), number of levels tracing
q - 9 (default), the average degree of the contact graph  
D - 10 days (default) incubation period 
I - 1 or 2 (default) sets of infected persons randomly selected from the population

The 'Input' folder contains two folders:

1. GeneratedData: contains files like 'day6.txt', which stores the contacts between persons, which is generated by power-law distribution 
2. Infected_List: contains the files like 'day6.txt', which stores the infected person's list, which is generated by a uniform distribution   


Commands to execute the program:-
command to compile the program =>  g++ contact_trace.cpp -o contact_trace
command to run the the program =>  ./contact_trace 

During the program's execution, First, it will ask for population size, N. After entering a value of N, it will generate data for ten days (default incubation period, D)
Then, it will ask for the next operation : 
=====================================================
1 => Contact data generation for the current day
2 => Contact Tracing for infected persons
3 => Exit from here
Enter your choice:
=====================================================

Case 1. Choice is 1
  =>     If the choice is 1, then it will generate data for the next day

Case 2. Choice is 2
  =>
         If the choice is two, it generates an infected list randomly for the current day.

         After that, it stores the output/result in the 'Output' folder.

         The 'Output' folder contains two subfolders and one file: 

        file:-
         1. Contact_Graph_info.txt: It stores the contact history of every person, how each person contacts other persons

        subfolders:-
         1. Infected_path_list : contains the files like 'day6.txt' which stores the contacts(directly or indirectly) between infected person with other persons
         2. Level_traverse: contains files like 'day6.txt', which stores the level-wise trace list of persons who have chances of being infected

Case 3. Choice is 3
  =>     Exits the program

-----------------------------------------------END---------------------------------------------------------------------------

